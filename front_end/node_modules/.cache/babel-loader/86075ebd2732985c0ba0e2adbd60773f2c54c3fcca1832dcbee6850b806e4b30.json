{"ast":null,"code":"var _jsxFileName = \"/Users/frank/workspace/dev_practice/front_end/src/components/Messager.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Input } from \"antd\"; // Import Search from antd\nimport DisplayArea from './DisplayArea';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Search\n} = Input;\nexport default function Messager() {\n  _s();\n  const [querytxt, setquerytxt] = useState(\"\");\n  const [displaytxts, setdisplaytxts] = useState([]);\n  const [toScroll, setToScroll] = useState(false);\n  const componentWidth = '50%';\n  const handleAreaChange = e => {\n    setquerytxt(e.target.value);\n  };\n  const handleSubmit = async value => {\n    if (value !== \"\") {\n      try {\n        const appendedDisplay = [...displaytxts, {\n          \"text\": value,\n          \"source\": \"human\"\n        }];\n        setdisplaytxts(appendedDisplay);\n        setquerytxt(\"\");\n        setToScroll(true);\n        const res = await fetch(`http://127.0.0.1:3001/query?query=${encodeURIComponent(value)}`, {\n          method: \"GET\"\n        });\n        if (!res.ok) {\n          const errorMessage = await res.text();\n          throw new Error(`Error ${res.status}: ${errorMessage}`);\n        }\n        const reader = res.body.getReader();\n        const decoder = new TextDecoder(\"utf-8\");\n        let text_stream = \"\";\n        const processStream = async () => {\n          const {\n            done,\n            value\n          } = await reader.read();\n          if (done) {\n            return; // Stream completed\n          }\n          const chunk = decoder.decode(value, {\n            stream: true\n          });\n          text_stream += chunk;\n          setdisplaytxts([...appendedDisplay, {\n            \"text\": text_stream,\n            \"source\": \"machine\"\n          }]);\n\n          // Continue reading the stream\n          setTimeout(processStream, 2000);\n          processStream();\n        };\n        processStream();\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(DisplayArea, {\n      displaytxts: displaytxts,\n      toScroll: toScroll,\n      setToScroll: setToScroll,\n      componentWidth: componentWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      placeholder: \"Enter your query\",\n      enterButton: \"Submit\",\n      size: \"large\",\n      value: querytxt,\n      onChange: handleAreaChange,\n      onSearch: handleSubmit,\n      style: {\n        width: componentWidth,\n        height: '10%',\n        marginTop: '75%',\n        marginLeft: '25%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n_s(Messager, \"m0UFlgPr7j+WClFTyuLUQalcks4=\");\n_c = Messager;\nvar _c;\n$RefreshReg$(_c, \"Messager\");","map":{"version":3,"names":["useState","Input","DisplayArea","jsxDEV","_jsxDEV","Search","Messager","_s","querytxt","setquerytxt","displaytxts","setdisplaytxts","toScroll","setToScroll","componentWidth","handleAreaChange","e","target","value","handleSubmit","appendedDisplay","res","fetch","encodeURIComponent","method","ok","errorMessage","text","Error","status","reader","body","getReader","decoder","TextDecoder","text_stream","processStream","done","read","chunk","decode","stream","setTimeout","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","enterButton","size","onChange","onSearch","style","width","height","marginTop","marginLeft","_c","$RefreshReg$"],"sources":["/Users/frank/workspace/dev_practice/front_end/src/components/Messager.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { Input } from \"antd\"; // Import Search from antd\nimport DisplayArea from './DisplayArea';\n\nconst { Search } = Input;\n\nexport default function Messager() {\n    const [querytxt, setquerytxt] = useState(\"\");\n    const [displaytxts, setdisplaytxts] = useState([]);\n    const [toScroll, setToScroll] = useState(false);\n\n    const componentWidth = '50%';\n\n    const handleAreaChange = (e) => {\n        setquerytxt(e.target.value);\n    };\n\n    const handleSubmit = async (value) => {\n        if (value !== \"\") {\n            try {\n                const appendedDisplay = [...displaytxts, { \"text\": value, \"source\": \"human\" }];\n                setdisplaytxts(appendedDisplay);\n                setquerytxt(\"\");\n                setToScroll(true);\n\n                const res = await fetch(`http://127.0.0.1:3001/query?query=${encodeURIComponent(value)}`, { method: \"GET\" });\n\n                if (!res.ok) {\n                    const errorMessage = await res.text();\n                    throw new Error(`Error ${res.status}: ${errorMessage}`);\n                }\n\n                const reader = res.body.getReader();\n                const decoder = new TextDecoder(\"utf-8\");\n                let text_stream = \"\";\n\n                const processStream = async () => {\n                    const { done, value } = await reader.read();\n                    if (done) {\n                        return; // Stream completed\n                    }\n\n                    const chunk = decoder.decode(value, { stream: true });\n                    text_stream += chunk;\n\n                    setdisplaytxts([...appendedDisplay, { \"text\": text_stream, \"source\": \"machine\" }]);\n\n                    // Continue reading the stream\n                    setTimeout(processStream, 2000);\n                    processStream();\n                };\n\n                processStream();\n            } catch (error) {\n                console.log(error);\n            }\n        }\n    };\n\n    return (\n        <div>\n            <DisplayArea \n                displaytxts={displaytxts} \n                toScroll={toScroll} \n                setToScroll={setToScroll} \n                componentWidth={componentWidth}\n            />\n            <Search\n                placeholder=\"Enter your query\"\n                enterButton=\"Submit\"\n                size=\"large\"\n                value={querytxt}\n                onChange={handleAreaChange}\n                onSearch={handleSubmit}\n                style={{ width: componentWidth, height: '10%', marginTop: '75%', marginLeft: '25%' }}\n            />\n        </div>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}