{"ast":null,"code":"var _jsxFileName = \"/Users/frank/workspace/dev_practice/front_end/src/components/Messager.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Input } from \"antd\"; // Import Search from antd\nimport DisplayArea from './DisplayArea';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Search\n} = Input;\nexport default function Messager() {\n  _s();\n  const [querytxt, setquerytxt] = useState(\"\");\n  const [displaytxts, setdisplaytxts] = useState([]);\n  const [toScroll, setToScroll] = useState(false);\n  const componentWidth = '50%';\n  const handleAreaChange = e => {\n    setquerytxt(e.target.value);\n  };\n  const handleSubmit = async () => {\n    try {\n      const response = await fetch('http://localhost:11434/api/generate', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          model: 'your-model',\n          prompt: 'Hello, how are you?',\n          stream: true\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const reader = response.body.getReader();\n      const decoder = new TextDecoder('utf-8');\n      let done = false;\n      while (!done) {\n        const {\n          value,\n          done: readerDone\n        } = await reader.read();\n        done = readerDone;\n        if (value) {\n          const chunk = decoder.decode(value, {\n            stream: true\n          });\n          console.log(chunk); // Process the chunk of text (update state or UI)\n        }\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '10vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(DisplayArea, {\n      displaytxts: displaytxts,\n      toScroll: toScroll,\n      setToScroll: setToScroll,\n      componentWidth: componentWidth,\n      style: {\n        backgroundColor: \"#F8F8F8\",\n        width: '50%',\n        height: '80%',\n        border: '1px solid #F8F8F8',\n        position: 'absolute',\n        marginLeft: '50%',\n        marginTop: '85%',\n        overflowY: \"scroll\",\n        transform: 'translate(-50%, -50%)'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      placeholder: \"Enter your query\",\n      enterButton: \"Submit\",\n      size: \"large\",\n      value: querytxt,\n      onChange: handleAreaChange,\n      onSearch: handleSubmit,\n      style: {\n        width: componentWidth,\n        height: '10%',\n        marginTop: '90%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n_s(Messager, \"m0UFlgPr7j+WClFTyuLUQalcks4=\");\n_c = Messager;\nvar _c;\n$RefreshReg$(_c, \"Messager\");","map":{"version":3,"names":["useState","Input","DisplayArea","jsxDEV","_jsxDEV","Search","Messager","_s","querytxt","setquerytxt","displaytxts","setdisplaytxts","toScroll","setToScroll","componentWidth","handleAreaChange","e","target","value","handleSubmit","response","fetch","method","headers","body","JSON","stringify","model","prompt","stream","ok","Error","reader","getReader","decoder","TextDecoder","done","readerDone","read","chunk","decode","console","log","error","style","display","flexDirection","justifyContent","alignItems","height","children","backgroundColor","width","border","position","marginLeft","marginTop","overflowY","transform","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","enterButton","size","onChange","onSearch","_c","$RefreshReg$"],"sources":["/Users/frank/workspace/dev_practice/front_end/src/components/Messager.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { Input } from \"antd\"; // Import Search from antd\nimport DisplayArea from './DisplayArea';\n\nconst { Search } = Input;\n\nexport default function Messager() {\n    const [querytxt, setquerytxt] = useState(\"\");\n    const [displaytxts, setdisplaytxts] = useState([]);\n    const [toScroll, setToScroll] = useState(false);\n\n    const componentWidth = '50%';\n\n    const handleAreaChange = (e) => {\n        setquerytxt(e.target.value);\n    };\n\n    const handleSubmit= async () => {\n        try {\n            const response = await fetch('http://localhost:11434/api/generate', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    model: 'your-model',\n                    prompt: 'Hello, how are you?',\n                    stream: true\n                }),\n            });\n    \n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n    \n            const reader = response.body.getReader();\n            const decoder = new TextDecoder('utf-8');\n            let done = false;\n    \n            while (!done) {\n                const { value, done: readerDone } = await reader.read();\n                done = readerDone;\n                if (value) {\n                    const chunk = decoder.decode(value, { stream: true });\n                    console.log(chunk); // Process the chunk of text (update state or UI)\n                }\n            }\n        } catch (error) {\n            console.error('Error:', error);\n        }\n    };\n\n    return (\n        <div style={{ \n                    display: 'flex', \n                    flexDirection: 'column', \n                    justifyContent: 'center', \n                    alignItems: 'center', \n                    height: '10vh'  \n                }}\n        >\n            <DisplayArea \n                displaytxts={displaytxts} \n                toScroll={toScroll} \n                setToScroll={setToScroll} \n                componentWidth={componentWidth}\n                style={{ \n                    backgroundColor: \"#F8F8F8\",\n                    width: '50%', \n                    height: '80%', \n                    border: '1px solid #F8F8F8', \n                    position: 'absolute', \n                    marginLeft: '50%', \n                    marginTop: '85%',\n                    overflowY: \"scroll\",\n                    transform: 'translate(-50%, -50%)' \n                }}\n            />\n            <Search\n                placeholder=\"Enter your query\"\n                enterButton=\"Submit\"\n                size=\"large\"\n                value={querytxt}\n                onChange={handleAreaChange}\n                onSearch={handleSubmit}\n                style={{ width: componentWidth, height: '10%', marginTop: '90%' }}\n            />\n        </div>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}