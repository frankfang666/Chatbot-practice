{"ast":null,"code":"var _jsxFileName = \"/Users/frank/workspace/dev_practice/front_end/src/components/DisplayArea.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DisplayArea({\n  displaytxts,\n  toScroll,\n  setToScroll,\n  componentWidth\n}) {\n  _s();\n  const scrollableDivRef = useRef(null);\n  useEffect(() => {\n    scrollableDivRef.current.scrollTop = scrollableDivRef.current.scrollHeight;\n    setToScroll(false);\n  }, [toScroll, setToScroll]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: scrollableDivRef,\n    children: displaytxts.map((x, i) => {\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyleType: 'none',\n          padding: '0',\n          margin: '0'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            display: 'flex',\n            justifyContent: x.source === 'human' ? 'flex-start' : 'flex-end'\n          },\n          children: [x.source === 'human' && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"user.ico\",\n            alt: \"avatar\",\n            style: {\n              width: '40px',\n              height: '40px',\n              borderRadius: '50%',\n              marginTop: '15px',\n              marginLeft: '10px',\n              marginRight: '0px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 42\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'relative',\n              padding: '10px',\n              display: 'inline-block',\n              backgroundColor: x.source === 'human' ? '#E8E8E8' : '#229FFF',\n              borderRadius: '10px',\n              maxWidth: componentWidth,\n              color: x.source === 'human' ? 'black' : 'white',\n              wordBreak: 'break-word',\n              marginTop: '20px',\n              marginBottom: '10px',\n              marginLeft: x.source === 'human' ? '10px' : '0',\n              marginRight: x.source === 'machine' ? '10px' : '0',\n              overflow: 'hidden'\n            },\n            children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n              components: {\n                p: ({\n                  children\n                }) => /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    margin: 0,\n                    wordBreak: 'break-word',\n                    maxWidth: '100%'\n                  },\n                  children: children\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 86\n                }, this)\n              },\n              children: x.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 33\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n_s(DisplayArea, \"zQOFJWnM8w1Tv/JSB6Nu+54q0o4=\");\n_c = DisplayArea;\nvar _c;\n$RefreshReg$(_c, \"DisplayArea\");","map":{"version":3,"names":["useEffect","useRef","ReactMarkdown","jsxDEV","_jsxDEV","DisplayArea","displaytxts","toScroll","setToScroll","componentWidth","_s","scrollableDivRef","current","scrollTop","scrollHeight","ref","children","map","x","i","style","listStyleType","padding","margin","display","justifyContent","source","src","alt","width","height","borderRadius","marginTop","marginLeft","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","position","backgroundColor","maxWidth","color","wordBreak","marginBottom","overflow","components","p","text","_c","$RefreshReg$"],"sources":["/Users/frank/workspace/dev_practice/front_end/src/components/DisplayArea.jsx"],"sourcesContent":["import {useEffect, useRef} from 'react'\nimport ReactMarkdown from 'react-markdown'\n\nexport default function DisplayArea({ displaytxts, toScroll, setToScroll, componentWidth }) {\n    const scrollableDivRef = useRef(null)\n\n    useEffect(()=>{\n            scrollableDivRef.current.scrollTop = scrollableDivRef.current.scrollHeight\n            setToScroll(false)\n        }, [toScroll, setToScroll]\n    )\n\n    return (\n        <div \n            ref={scrollableDivRef}\n        >\n            {\n                displaytxts.map((x, i) => {\n                    return (\n                        <ul style={{ listStyleType: 'none', padding: '0', margin: '0' }}>\n                            <li\n                                key={i}\n                                style={{\n                                    display: 'flex',\n                                    justifyContent: x.source === 'human' ? 'flex-start' : 'flex-end',\n                                }}\n                            >\n                                {\n                                        x.source === 'human' && \n                                        (<img \n                                            src='user.ico' \n                                            alt=\"avatar\" \n                                            style={{ \n                                                width: '40px', \n                                                height: '40px', \n                                                borderRadius: '50%', \n                                                marginTop: '15px',\n                                                marginLeft: '10px', \n                                                marginRight: '0px' \n                                            }} \n                                        />)\n                                    }\n                                <div\n                                    style={{\n                                        position: 'relative',\n                                        padding: '10px',\n                                        display: 'inline-block',\n                                        backgroundColor: x.source === 'human' ? '#E8E8E8' : '#229FFF',\n                                        borderRadius: '10px',\n                                        maxWidth: componentWidth,\n                                        color: x.source === 'human' ? 'black' : 'white',\n                                        wordBreak: 'break-word',\n                                        marginTop: '20px',\n                                        marginBottom: '10px',\n                                        marginLeft: x.source === 'human' ? '10px' : '0',\n                                        marginRight: x.source === 'machine' ? '10px' : '0',\n                                        overflow: 'hidden',\n                                    }}\n                                >\n                                    <ReactMarkdown components={{p: ({ children }) => <span style={{ margin: 0, wordBreak: 'break-word', maxWidth: '100%'}}>{children}</span>}}>\n                                        {x.text}\n                                    </ReactMarkdown>\n                                </div>\n                            </li>\n                    </ul>\n                    )\n                    }\n                )\n            }\n        </div>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}