{"ast":null,"code":"var _jsxFileName = \"/Users/frank/workspace/dev_practice/front_end/src/components/Messager.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport DisplayArea from './DisplayArea';\nimport QueryBox from \"./QueryBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Messager() {\n  _s();\n  const [querytxt, setquerytxt] = useState(\"\");\n  const [displaytxts, setdisplaytxts] = useState([]);\n  const [toScroll, setToScroll] = useState(false);\n  const [areaHeight, areaWidth, inputHeight] = [700, 600, 30];\n  const inputWidth = areaWidth;\n  const handleAreaChange = e => {\n    setquerytxt(e.target.value);\n  };\n  const handleSubmit = async () => {\n    if (querytxt !== \"\") {\n      try {\n        const appendedDisplay = [...displaytxts, {\n          \"text\": querytxt,\n          \"source\": \"human\"\n        }];\n        setdisplaytxts(appendedDisplay);\n        setquerytxt(\"\");\n        setToScroll(true);\n        const res = await fetch(`http://127.0.0.1:3001/query?query=${encodeURIComponent(querytxt)}`, {\n          method: \"GET\"\n        });\n        if (!res.ok) {\n          const errorMessage = await res.text();\n          throw new Error(`Error ${res.status}: ${errorMessage}`);\n        }\n        const reader = res.body.getReader();\n        const decoder = new TextDecoder(\"utf-8\");\n        let text_stream = \"\";\n        const processStream = async () => {\n          const {\n            done,\n            value\n          } = await reader.read();\n          if (done) {\n            return; // Stream completed\n          }\n          const chunk = decoder.decode(value, {\n            stream: true\n          });\n          text_stream += chunk;\n          setdisplaytxts([...appendedDisplay, {\n            \"text\": text_stream,\n            \"source\": \"machine\"\n          }]);\n\n          // Continue reading the stream\n          setTimeout(processStream, 2000);\n          processStream();\n        };\n        processStream();\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(DisplayArea, {\n      displaytxts: displaytxts,\n      areaHeight: areaHeight,\n      areaWidth: areaWidth,\n      toScroll: toScroll,\n      setToScroll: setToScroll\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(QueryBox, {\n      inputHeight: inputHeight,\n      inputWidth: inputWidth,\n      areaHeight: areaHeight,\n      querytxt: querytxt,\n      handleAreaChange: handleAreaChange,\n      handleSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(Messager, \"m0UFlgPr7j+WClFTyuLUQalcks4=\");\n_c = Messager;\nvar _c;\n$RefreshReg$(_c, \"Messager\");","map":{"version":3,"names":["useState","DisplayArea","QueryBox","jsxDEV","_jsxDEV","Messager","_s","querytxt","setquerytxt","displaytxts","setdisplaytxts","toScroll","setToScroll","areaHeight","areaWidth","inputHeight","inputWidth","handleAreaChange","e","target","value","handleSubmit","appendedDisplay","res","fetch","encodeURIComponent","method","ok","errorMessage","text","Error","status","reader","body","getReader","decoder","TextDecoder","text_stream","processStream","done","read","chunk","decode","stream","setTimeout","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/frank/workspace/dev_practice/front_end/src/components/Messager.jsx"],"sourcesContent":["import { useState } from \"react\"\nimport DisplayArea from './DisplayArea'\nimport QueryBox from \"./QueryBox\"\n\nexport default function Messager(){\n    const [querytxt, setquerytxt] = useState(\"\")\n    const [displaytxts, setdisplaytxts] = useState([])\n    const [toScroll, setToScroll] = useState(false)\n\n    const [areaHeight, areaWidth, inputHeight] = [700, 600, 30]\n    const inputWidth = areaWidth\n\n    const handleAreaChange = (e) => {\n        setquerytxt(e.target.value)\n    }\n\n    const handleSubmit = async () => {\n        if (querytxt !== \"\") {\n            try {\n                const appendedDisplay = [...displaytxts, { \"text\": querytxt, \"source\": \"human\" }]\n                setdisplaytxts(appendedDisplay)\n                setquerytxt(\"\")\n                setToScroll(true)\n    \n                const res = await fetch(`http://127.0.0.1:3001/query?query=${encodeURIComponent(querytxt)}`, { method: \"GET\" })\n    \n                if (!res.ok) {\n                    const errorMessage = await res.text()\n                    throw new Error(`Error ${res.status}: ${errorMessage}`)\n                }\n    \n                const reader = res.body.getReader()\n                const decoder = new TextDecoder(\"utf-8\")\n                let text_stream = \"\"\n    \n                const processStream = async () => {\n                    const { done, value } = await reader.read()\n                    if (done) {\n                        return // Stream completed\n                    }\n    \n                    const chunk = decoder.decode(value, { stream: true })\n                    text_stream += chunk\n    \n                    setdisplaytxts([...appendedDisplay, { \"text\": text_stream, \"source\": \"machine\" }])\n    \n                    // Continue reading the stream\n                    setTimeout(processStream, 2000)\n                    processStream()\n                };\n    \n                processStream()\n            } catch (error) {\n                console.log(error)\n            }\n        }\n    };\n\n    return (\n        <div>\n            <DisplayArea \n                displaytxts={displaytxts} \n                areaHeight={areaHeight} \n                areaWidth={areaWidth} \n                toScroll={toScroll} \n                setToScroll={setToScroll} />\n            <QueryBox \n                inputHeight={inputHeight} \n                inputWidth={inputWidth} \n                areaHeight={areaHeight} \n                querytxt={querytxt}\n                handleAreaChange={handleAreaChange} \n                handleSubmit={handleSubmit}/>\n        </div>\n    )\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,QAAQ,MAAM,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,eAAe,SAASC,QAAQA,CAAA,EAAE;EAAAC,EAAA;EAC9B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAM,CAACa,UAAU,EAAEC,SAAS,EAAEC,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;EAC3D,MAAMC,UAAU,GAAGF,SAAS;EAE5B,MAAMG,gBAAgB,GAAIC,CAAC,IAAK;IAC5BV,WAAW,CAACU,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAId,QAAQ,KAAK,EAAE,EAAE;MACjB,IAAI;QACA,MAAMe,eAAe,GAAG,CAAC,GAAGb,WAAW,EAAE;UAAE,MAAM,EAAEF,QAAQ;UAAE,QAAQ,EAAE;QAAQ,CAAC,CAAC;QACjFG,cAAc,CAACY,eAAe,CAAC;QAC/Bd,WAAW,CAAC,EAAE,CAAC;QACfI,WAAW,CAAC,IAAI,CAAC;QAEjB,MAAMW,GAAG,GAAG,MAAMC,KAAK,CAAC,qCAAqCC,kBAAkB,CAAClB,QAAQ,CAAC,EAAE,EAAE;UAAEmB,MAAM,EAAE;QAAM,CAAC,CAAC;QAE/G,IAAI,CAACH,GAAG,CAACI,EAAE,EAAE;UACT,MAAMC,YAAY,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC;UACrC,MAAM,IAAIC,KAAK,CAAC,SAASP,GAAG,CAACQ,MAAM,KAAKH,YAAY,EAAE,CAAC;QAC3D;QAEA,MAAMI,MAAM,GAAGT,GAAG,CAACU,IAAI,CAACC,SAAS,CAAC,CAAC;QACnC,MAAMC,OAAO,GAAG,IAAIC,WAAW,CAAC,OAAO,CAAC;QACxC,IAAIC,WAAW,GAAG,EAAE;QAEpB,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;UAC9B,MAAM;YAAEC,IAAI;YAAEnB;UAAM,CAAC,GAAG,MAAMY,MAAM,CAACQ,IAAI,CAAC,CAAC;UAC3C,IAAID,IAAI,EAAE;YACN,OAAM,CAAC;UACX;UAEA,MAAME,KAAK,GAAGN,OAAO,CAACO,MAAM,CAACtB,KAAK,EAAE;YAAEuB,MAAM,EAAE;UAAK,CAAC,CAAC;UACrDN,WAAW,IAAII,KAAK;UAEpB/B,cAAc,CAAC,CAAC,GAAGY,eAAe,EAAE;YAAE,MAAM,EAAEe,WAAW;YAAE,QAAQ,EAAE;UAAU,CAAC,CAAC,CAAC;;UAElF;UACAO,UAAU,CAACN,aAAa,EAAE,IAAI,CAAC;UAC/BA,aAAa,CAAC,CAAC;QACnB,CAAC;QAEDA,aAAa,CAAC,CAAC;MACnB,CAAC,CAAC,OAAOO,KAAK,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACtB;IACJ;EACJ,CAAC;EAED,oBACIzC,OAAA;IAAA4C,QAAA,gBACI5C,OAAA,CAACH,WAAW;MACRQ,WAAW,EAAEA,WAAY;MACzBI,UAAU,EAAEA,UAAW;MACvBC,SAAS,EAAEA,SAAU;MACrBH,QAAQ,EAAEA,QAAS;MACnBC,WAAW,EAAEA;IAAY;MAAAqC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChChD,OAAA,CAACF,QAAQ;MACLa,WAAW,EAAEA,WAAY;MACzBC,UAAU,EAAEA,UAAW;MACvBH,UAAU,EAAEA,UAAW;MACvBN,QAAQ,EAAEA,QAAS;MACnBU,gBAAgB,EAAEA,gBAAiB;MACnCI,YAAY,EAAEA;IAAa;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEd;AAAC9C,EAAA,CAvEuBD,QAAQ;AAAAgD,EAAA,GAARhD,QAAQ;AAAA,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}