{"ast":null,"code":"var _jsxFileName = \"/Users/frank/workspace/dev_practice/front_end/src/components/DisplayArea.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DisplayArea({\n  displaytxts,\n  areaHeight,\n  areaWidth,\n  toScroll,\n  setToScroll\n}) {\n  _s();\n  const scrollableDivRef = useRef(null);\n  useEffect(() => {\n    scrollableDivRef.current.scrollTop = scrollableDivRef.current.scrollHeight;\n    setToScroll(false);\n  }, [toScroll, setToScroll]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: scrollableDivRef,\n    style: {\n      backgroundColor: \"#F8F8F8\",\n      width: areaWidth,\n      height: areaHeight,\n      border: '1px solid #F8F8F8',\n      position: 'absolute',\n      left: '50%',\n      top: window.innerHeight / 2,\n      overflowY: \"scroll\",\n      transform: 'translate(-50%, -50%)'\n    },\n    children: displaytxts.map((x, i) => {\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyleType: 'none',\n          padding: '0',\n          margin: '0'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            display: 'flex',\n            justifyContent: x.source === 'human' ? 'flex-start' : 'flex-end'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'relative',\n              padding: '10px',\n              display: 'inline-block',\n              backgroundColor: x.source === 'human' ? '#E8E8E8' : '#229FFF',\n              borderRadius: '10px',\n              maxWidth: areaWidth - 80,\n              color: x.source === 'human' ? 'black' : 'white',\n              wordBreak: 'break-word',\n              marginTop: '20px',\n              marginBottom: '10px',\n              marginLeft: x.source === 'human' ? '10px' : '0',\n              marginRight: x.source === 'machine' ? '10px' : '0',\n              overflow: 'hidden'\n            },\n            children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n              components: {\n                p: ({\n                  children\n                }) => /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    margin: 0\n                  },\n                  children: children\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 86\n                }, this)\n              },\n              children: x.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 33\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n_s(DisplayArea, \"zQOFJWnM8w1Tv/JSB6Nu+54q0o4=\");\n_c = DisplayArea;\nvar _c;\n$RefreshReg$(_c, \"DisplayArea\");","map":{"version":3,"names":["useEffect","useRef","ReactMarkdown","jsxDEV","_jsxDEV","DisplayArea","displaytxts","areaHeight","areaWidth","toScroll","setToScroll","_s","scrollableDivRef","current","scrollTop","scrollHeight","ref","style","backgroundColor","width","height","border","position","left","top","window","innerHeight","overflowY","transform","children","map","x","i","listStyleType","padding","margin","display","justifyContent","source","borderRadius","maxWidth","color","wordBreak","marginTop","marginBottom","marginLeft","marginRight","overflow","components","p","fileName","_jsxFileName","lineNumber","columnNumber","text","_c","$RefreshReg$"],"sources":["/Users/frank/workspace/dev_practice/front_end/src/components/DisplayArea.jsx"],"sourcesContent":["import {useEffect, useRef} from 'react'\nimport ReactMarkdown from 'react-markdown'\n\nexport default function DisplayArea({ displaytxts, areaHeight, areaWidth, toScroll, setToScroll }) {\n    const scrollableDivRef = useRef(null)\n\n    useEffect(()=>{\n            scrollableDivRef.current.scrollTop = scrollableDivRef.current.scrollHeight\n            setToScroll(false)\n        }, [toScroll, setToScroll]\n    )\n\n    return (\n        <div \n            ref={scrollableDivRef}\n            style={{ \n            backgroundColor: \"#F8F8F8\",\n            width: areaWidth, \n            height: areaHeight, \n            border: '1px solid #F8F8F8', \n            position: 'absolute', \n            left: '50%', \n            top: window.innerHeight / 2,\n            overflowY: \"scroll\",\n            transform: 'translate(-50%, -50%)' }}\n        >\n            {\n                displaytxts.map((x, i) => {\n                    return (\n                        <ul style={{ listStyleType: 'none', padding: '0', margin: '0' }}>\n                            <li\n                                key={i}\n                                style={{\n                                    display: 'flex',\n                                    justifyContent: x.source === 'human' ? 'flex-start' : 'flex-end',\n                                }}\n                            >\n                                <div\n                                    style={{\n                                        position: 'relative',\n                                        padding: '10px',\n                                        display: 'inline-block',\n                                        backgroundColor: x.source === 'human' ? '#E8E8E8' : '#229FFF',\n                                        borderRadius: '10px',\n                                        maxWidth: areaWidth - 80,\n                                        color: x.source === 'human' ? 'black' : 'white',\n                                        wordBreak: 'break-word',\n                                        marginTop: '20px',\n                                        marginBottom: '10px',\n                                        marginLeft: x.source === 'human' ? '10px' : '0',\n                                        marginRight: x.source === 'machine' ? '10px' : '0',\n                                        overflow: 'hidden',\n                                    }}\n                                >\n                                    <ReactMarkdown components={{p: ({ children }) => <span style={{ margin: 0 }}>{children}</span>}}>\n                                        {x.text}\n                                    </ReactMarkdown>\n                                </div>\n                            </li>\n                    </ul>\n                    )\n                    }\n                )\n            }\n        </div>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}