{"ast":null,"code":"var _jsxFileName = \"/Users/frank/workspace/dev_practice/front_end/src/components/QueryBox.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextAreaComponent = ({\n  inputWidth,\n  inputHeight,\n  areaHeight,\n  querytxt,\n  handleAreaChange,\n  handleEnter\n}) => {\n  _s();\n  const [height, setHeight] = useState(inputHeight);\n  const textareaRef = useRef(null);\n  const maxHeight = 200; // Define the maximum height limit here\n\n  const adjustHeight = () => {\n    if (textareaRef.current) {\n      // Resetting the height to auto to get the correct scrollHeight\n      textareaRef.current.style.height = 'auto';\n      const newHeight = Math.min(textareaRef.current.scrollHeight, maxHeight);\n      setHeight(newHeight);\n    }\n  };\n  useEffect(() => {\n    adjustHeight(); // Initial adjustment\n  }, [querytxt]); // Adjust whenever the text changes\n\n  return /*#__PURE__*/_jsxDEV(\"textarea\", {\n    ref: textareaRef,\n    style: {\n      backgroundColor: \"#F8F8F8\",\n      width: inputWidth,\n      height: height,\n      fontSize: inputHeight - 14,\n      border: '1px solid #D3D3D3',\n      position: 'absolute',\n      left: '50%',\n      top: `calc(50% + ${areaHeight / 2}px)`,\n      transform: 'translate(-50%, -50%)',\n      borderRadius: '10px',\n      overflowY: height >= maxHeight ? \"scroll\" : \"hidden\",\n      resize: 'none',\n      transition: 'height 0.2s ease-out' // Smooth transition\n    },\n    placeholder: \"Message\",\n    value: querytxt,\n    onChange: e => {\n      handleAreaChange(e);\n      adjustHeight(); // Adjust height on change\n    },\n    onKeyDown: handleEnter\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(TextAreaComponent, \"OUgMPUbifn8XUzxtEziNZFKNMME=\");\n_c = TextAreaComponent;\nexport default TextAreaComponent;\nvar _c;\n$RefreshReg$(_c, \"TextAreaComponent\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","TextAreaComponent","inputWidth","inputHeight","areaHeight","querytxt","handleAreaChange","handleEnter","_s","height","setHeight","textareaRef","maxHeight","adjustHeight","current","style","newHeight","Math","min","scrollHeight","ref","backgroundColor","width","fontSize","border","position","left","top","transform","borderRadius","overflowY","resize","transition","placeholder","value","onChange","e","onKeyDown","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/frank/workspace/dev_practice/front_end/src/components/QueryBox.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\n\nconst TextAreaComponent = ({ inputWidth, inputHeight, areaHeight, querytxt, handleAreaChange, handleEnter }) => {\n    const [height, setHeight] = useState(inputHeight);\n    const textareaRef = useRef(null);\n    const maxHeight = 200; // Define the maximum height limit here\n\n    const adjustHeight = () => {\n        if (textareaRef.current) {\n            // Resetting the height to auto to get the correct scrollHeight\n            textareaRef.current.style.height = 'auto';\n            const newHeight = Math.min(textareaRef.current.scrollHeight, maxHeight);\n            setHeight(newHeight);\n        }\n    };\n\n    useEffect(() => {\n        adjustHeight(); // Initial adjustment\n    }, [querytxt]); // Adjust whenever the text changes\n\n    return (\n        <textarea\n            ref={textareaRef}\n            style={{\n                backgroundColor: \"#F8F8F8\",\n                width: inputWidth,\n                height: height,\n                fontSize: inputHeight - 14,\n                border: '1px solid #D3D3D3',\n                position: 'absolute',\n                left: '50%',\n                top: `calc(50% + ${areaHeight / 2}px)`,\n                transform: 'translate(-50%, -50%)',\n                borderRadius: '10px',\n                overflowY: height >= maxHeight ? \"scroll\" : \"hidden\",\n                resize: 'none',\n                transition: 'height 0.2s ease-out', // Smooth transition\n            }}\n            placeholder=\"Message\"\n            value={querytxt}\n            onChange={(e) => {\n                handleAreaChange(e);\n                adjustHeight(); // Adjust height on change\n            }}\n            onKeyDown={handleEnter}\n        />\n    );\n};\n\nexport default TextAreaComponent;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC,UAAU;EAAEC,WAAW;EAAEC,UAAU;EAAEC,QAAQ;EAAEC,gBAAgB;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAC5G,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAACK,WAAW,CAAC;EACjD,MAAMQ,WAAW,GAAGf,MAAM,CAAC,IAAI,CAAC;EAChC,MAAMgB,SAAS,GAAG,GAAG,CAAC,CAAC;;EAEvB,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACvB,IAAIF,WAAW,CAACG,OAAO,EAAE;MACrB;MACAH,WAAW,CAACG,OAAO,CAACC,KAAK,CAACN,MAAM,GAAG,MAAM;MACzC,MAAMO,SAAS,GAAGC,IAAI,CAACC,GAAG,CAACP,WAAW,CAACG,OAAO,CAACK,YAAY,EAAEP,SAAS,CAAC;MACvEF,SAAS,CAACM,SAAS,CAAC;IACxB;EACJ,CAAC;EAEDnB,SAAS,CAAC,MAAM;IACZgB,YAAY,CAAC,CAAC,CAAC,CAAC;EACpB,CAAC,EAAE,CAACR,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEhB,oBACIL,OAAA;IACIoB,GAAG,EAAET,WAAY;IACjBI,KAAK,EAAE;MACHM,eAAe,EAAE,SAAS;MAC1BC,KAAK,EAAEpB,UAAU;MACjBO,MAAM,EAAEA,MAAM;MACdc,QAAQ,EAAEpB,WAAW,GAAG,EAAE;MAC1BqB,MAAM,EAAE,mBAAmB;MAC3BC,QAAQ,EAAE,UAAU;MACpBC,IAAI,EAAE,KAAK;MACXC,GAAG,EAAE,cAAcvB,UAAU,GAAG,CAAC,KAAK;MACtCwB,SAAS,EAAE,uBAAuB;MAClCC,YAAY,EAAE,MAAM;MACpBC,SAAS,EAAErB,MAAM,IAAIG,SAAS,GAAG,QAAQ,GAAG,QAAQ;MACpDmB,MAAM,EAAE,MAAM;MACdC,UAAU,EAAE,sBAAsB,CAAE;IACxC,CAAE;IACFC,WAAW,EAAC,SAAS;IACrBC,KAAK,EAAE7B,QAAS;IAChB8B,QAAQ,EAAGC,CAAC,IAAK;MACb9B,gBAAgB,CAAC8B,CAAC,CAAC;MACnBvB,YAAY,CAAC,CAAC,CAAC,CAAC;IACpB,CAAE;IACFwB,SAAS,EAAE9B;EAAY;IAAA+B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAEV,CAAC;AAACjC,EAAA,CA7CIP,iBAAiB;AAAAyC,EAAA,GAAjBzC,iBAAiB;AA+CvB,eAAeA,iBAAiB;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}